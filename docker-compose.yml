services:
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    expose:
      - "8080"
    environment:
      - patient.url=http://patient:8081
      - note.url=http://note:8082
      - risk.url=http://risk:8083
  patient:
    build:
      context: ./patient
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    expose:
      - "8081"
    depends_on:
      mysql-db:
        condition: service_healthy
    environment:
      - spring.datasource.url=jdbc:mysql://mysql-db:3306/patient
      - spring.datasource.username=root
      - spring.datasource.password=root
  note:
    build:
      context: ./note
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    expose:
      - "8082"
    depends_on:
      - mongo-db
      - patient
    environment:
      - spring.data.mongodb.uri=mongodb://mongo-db:27017/note
      - patient.url=patient:8081/patient
  risk:
    build:
      context: ./risk
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    expose:
      - "8083"
    depends_on:
      - patient
      - note
    environment:
      - patient.url=patient:8081/patient
      - note.url=note:8082/note
  angular-app:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    depends_on:
      - gateway

  mongo-db:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: note
  mysql-db:
    image: mysql:latest
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=patient
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin ping -h localhost -u root --password=root || exit 1"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
